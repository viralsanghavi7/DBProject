/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbproject.Professor;

import dbproject.dataType.*;
import dbproject.WelcomeScreen;
import dbproject.dbconnection.dbconnection_dbObject;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;

/**
 *
 * @author Chetan
 */
public class Prof_Report extends javax.swing.JFrame {

    DataType_courseAction courseActionObj;
    ArrayList<String> Homeworks, Students, StudentHomework;
    ResultSet rs;
    Statement stmt;
    dbconnection_dbObject db;
    String query;
    
    /**
     * Creates new form MainScreen
     */
    public Prof_Report() {
        initComponents();
    }
    
    //Overloaded constructor
    public Prof_Report(DataType_courseAction inputObj) {
        initComponents();
        courseActionObj = inputObj;
        Homeworks = new ArrayList<String>();
        Students = new ArrayList<String>();
        StudentHomework = new ArrayList<String>();
        db = dbconnection_dbObject.getDBConnection();
        stmt = db.stmt;
        PopulateComboBoxData();
        
    }
    
    //Method to populate all the comboboxes in all the tabs available on the UI.
    private void PopulateComboBoxData(){
        
        jLabel1.setText(courseActionObj.getCourseID() + " " + courseActionObj.getCourseName());
        //Step1: Populate jComboBox1 in Homework related stats tab and jComboBox4 in max score students tab
        //Step2: Populate jComboBox2 in Student related stats tab
        String sCouseId = courseActionObj.getCourseID();
        try {
            //To load the list of homeworks in select homework dropdown
            query = "SELECT assignment_id, assignment_name from assignment where course_id ='" 
                    + sCouseId +"'";
            
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                Homeworks.add(rs.getString("assignment_id"));
                jComboBox1.addItem(rs.getString("assignment_name"));
                jComboBox4.addItem(rs.getString("assignment_name"));
            }
            
            
            //To load the list of students in select student dropdown.
            query = "select db.user_id, db.user_name from dbuser db, enrollment e " +
                    "where db.user_id = e.student_id and " +
                    "e.course_id = '" + sCouseId +"'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                Students.add(rs.getString("user_id"));
                jComboBox2.addItem(rs.getString("user_name"));
            }
            
        } catch (Exception oops) {
            System.out.println("Prof_Report.java:PopulateComboBoxData() " + oops);

        }
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jLabel12 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jLabel22 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton10.setText("Log out");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Subject Name");

        jButton4.setText("Home");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(285, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jInternalFrame1.setVisible(true);

        jLabel2.setText("Select Homework");

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Maximum score:");

        jLabel4.setText("_____________");

        jLabel5.setText("Minimum score:");

        jLabel6.setText("_____________");

        jLabel7.setText("Average number of attempts:");

        jLabel8.setText("_____________");

        jLabel9.setText("List of students who did not submit this HW:");

        jScrollPane1.setViewportView(jList1);

        jLabel10.setText("Student who scored maximum score first of the homework:");

        jLabel11.setText("_____________");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(27, 27, 27)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(26, 26, 26)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(35, 35, 35)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(44, 44, 44)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(119, 119, 119))
        );

        jTabbedPane1.addTab("Homework wise statistics", jInternalFrame1);

        jInternalFrame2.setVisible(true);

        jLabel12.setText("Select student from the list:");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton3.setText("View");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel13.setText("Homeworks attempted by this student");

        jLabel14.setText("HW_Score_val");

        jLabel15.setText("Average score across all homeworks:");

        jLabel16.setText("______________");

        jLabel17.setText("HW score according to criteria:");

        jLabel18.setText("Total number of attempts:");

        jLabel19.setText("no_of_atmpts");

        jLabel20.setText("Score selection method");

        jLabel21.setText("method_value");

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20))
                        .addGap(26, 26, 26)
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel14)
                            .addComponent(jLabel21)))
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addGap(26, 26, 26)
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(85, 85, 85)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel13))
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(31, 31, 31)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17))
                .addGap(33, 33, 33)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student wise statistics", jInternalFrame2);

        jInternalFrame3.setVisible(true);

        jLabel22.setText("Select Homework");

        jButton5.setText("View");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel23.setText("Maximum score:");

        jLabel24.setText("max_score_value");

        jLabel25.setText("List of students who scored max score on their first attempt:");

        jScrollPane2.setViewportView(jList2);

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24))
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(40, 40, 40)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel25)
                    .addComponent(jScrollPane2))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Max Score students", jInternalFrame3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Log out
    */
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        WelcomeScreen obj = new WelcomeScreen();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    /*
    Back button
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Prof_CourseActions obj = new Prof_CourseActions(courseActionObj.userObj, courseActionObj.getCourseObj());
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /*
    Home button
    */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ProfHome obj = new ProfHome(courseActionObj.userObj);
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    //View button in Homework related stats tab clicked
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Step1: Get the selected homework from the dropdown jComboBox1
        String selectedHW = Homeworks.get(jComboBox1.getSelectedIndex());
        
        //Step2: Get the corresponding data from database for that homework and populate on UI
        try
        {
            //For max and min score of homework
            query = "select max(atmpt_score) as maximum, min(atmpt_score) as minimum from attempt "
                    + "where assignment_id = '" + selectedHW + "'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                jLabel4.setText(rs.getString("maximum"));
                jLabel6.setText(rs.getString("minimum"));
            }
            
            //For avg number of attempts for homework
            query = "select avg(temp.number1) as average from (select count(*) as number1 from attempt "
                    + "where assignment_id = '" + selectedHW + "' group by student_id) temp ";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                jLabel8.setText(rs.getString("average"));
            }
            
            //For student name who scored max first for particular homework
            query = "select user_name from dbuser where user_id = "
                    + "(select student_id from (select student_id from attempt where assignment_id = '"
                    + selectedHW + "' order by atmpt_score desc, atmpt_dt asc) where rownum = 1)";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                jLabel11.setText(rs.getString("user_name"));
            }   
                
            //For finding the list of students who did not attempt particular homework
            query = "select e.student_id, db.user_name from dbuser db, enrollment e "
                    + " where db.user_id = e.student_id and e.course_id = '" 
                    + courseActionObj.getCourseID() + "'"
                    + " minus (select distinct at.student_id, db.user_name from attempt at, "
                    + " dbuser db where assignment_id = '" + selectedHW + "')";
            
            rs = stmt.executeQuery(query);
            DefaultListModel studentList = new DefaultListModel();
            while (rs.next()) {
                studentList.addElement(rs.getString("user_name"));
            }
            jList1.setModel(studentList);            
            
        } catch (Exception oops) {
            System.out.println("Prof_Report.java:jButton2ActionPerformed() " + oops);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    //View button in Student related stats tab clicked
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Step1: Get the selected student from the dropdown jComboBox2
        String selectedStudentID = Students.get(jComboBox2.getSelectedIndex());
        String sCourseId = courseActionObj.getCourseID();
        //Step2: Get the value of average score accross all homeworks for selected student
        try
        {            
        
        query = "select avg(temp.homework_score) as avg_hw_score from " +
                "(select a.assignment_id, a.assignment_name, " +
                " CASE" +
                        //for score selection = latest of all attempts
                "	WHEN a.score_selection_method = 1 THEN " +
                "		(select a1.atmpt_score " +
                "		from attempt a1 where " +
                "		a.assignment_id = a1.assignment_id " +
                "		and a1.atmpt_dt =  " +
                "		(select max(atmpt_dt) from attempt a2 " +
                "		where a1.student_id = a2.student_id " +
                " 		and a1.assignment_id = a2.assignment_id " +
                "		and a.assignment_id = a2.assignment_id " +
                "		and a2.student_id = '" + selectedStudentID + "'" +
                "		group by a2.student_id, a2.assignment_id)) " +
                        //for score selection = maximum of all attempts
                "	WHEN a.score_selection_method = 2 THEN " +
                "		(select max(a3.atmpt_score) from attempt a3 " +
                "		where a.assignment_id = a3.assignment_id " +
                "		and a3.student_id = '" + selectedStudentID + "'" +
                "		group by a3.student_id, a3.assignment_id) " +
                        //for score selection = average of all attempts
                "	WHEN a.score_selection_method = 3 THEN " +
                "		(select avg(a4.atmpt_score) from attempt a4 " +
                "		where a.assignment_id = a4.assignment_id " +
                "		and a4.student_id = '" + selectedStudentID + "'" +
                "		group by a4.student_id, a4.assignment_id) " +
                " End as homework_score " +
                " from assignment a where a.course_id = '" + sCourseId + "') temp";
        
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                jLabel16.setText(rs.getString("avg_hw_score"));                
            }
            
        //Step3: Load the dropdown jComboBox3
        query = "select a.assignment_id, a.assignment_name from assignment a " +
                " where exists " +
                " (select at.student_id from attempt at " +
                " where at.assignment_id = a.assignment_id " +
                " and a.course_id = '" + sCourseId + "'" +
                " and at.student_id = '" + selectedStudentID + "')";
        
        rs = stmt.executeQuery(query);
        while (rs.next()) {
            StudentHomework.add(rs.getString("assignment_id"));
            jComboBox3.addItem(rs.getString("assignment_name"));
        }
            
        }
        catch (Exception oops) {
            System.out.println("Prof_Report.java:PopulateComboBoxData() " + oops);

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //event triggered when homework is selected for particular student on student related stats tab
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        //Step1: Get the selected student and selected homework from the dropdown jComboBox2 and jComboBox3 resp
        String selectedStudentID = Students.get(jComboBox2.getSelectedIndex());
        String selectedHWForStudent = StudentHomework.get(jComboBox3.getSelectedIndex());
        
        //step2: Get the values of score selection method of homework, HW score, total number of attempts
        try
        {            
        
        // To find score selection method and hw score according to score selection method.
        query = "select a.assignment_id, a.assignment_name, " +
                " CASE " +
                "	WHEN a.score_selection_method = 1 THEN 'Latest Attempt' " +
                "	WHEN a.score_selection_method = 2 THEN 'Maximum Score' " +
                "	WHEN a.score_selection_method = 3 THEN 'Average Score'  " +
                "END as score_selection_method, " +
                "CASE " +
                "	WHEN a.score_selection_method = 1 THEN " +
                "		(select a1.atmpt_score " +
                "		from attempt a1 where " +
                "		a.assignment_id = a1.assignment_id " +
                "		and a1.atmpt_dt =  " +
                "		(select max(atmpt_dt) from attempt a2 " +
                "		where a1.student_id = a2.student_id " +
                " 		and a1.assignment_id = a2.assignment_id " +
                "		and a.assignment_id = a2.assignment_id " +
                "		and a2.student_id = '" + selectedStudentID + "'" +
                "		group by a2.student_id, a2.assignment_id)) " +
                
                "	WHEN a.score_selection_method = 2 THEN " +
                "		(select max(a3.atmpt_score) from attempt a3 " +
                "		where a.assignment_id = a3.assignment_id " +
                "		and a3.student_id = '" + selectedStudentID + "'" +
                "		group by a3.student_id, a3.assignment_id) " +
        
                "	WHEN a.score_selection_method = 3 THEN " +
                "		(select avg(a4.atmpt_score) from attempt a4 " +
                "		where a.assignment_id = a4.assignment_id  " +
                "		and a4.student_id = '" + selectedStudentID + "'" +
                "		group by a4.student_id, a4.assignment_id) " +
                " End as homework_score " +
                " from assignment a where a.assignment_id = '" + selectedHWForStudent + "'";
        rs = db.conn.createStatement().executeQuery(query);
        while (rs.next()) {
            jLabel21.setText(rs.getString("score_selection_method"));
            jLabel14.setText(rs.getString("homework_score"));
        }
        
        // To find total number of attempts by particular student for particular homework.
        query = " select at.student_id, at.assignment_id , count(at.atmpt_dt) as totalAttempts from attempt at " +
                " where at.student_id = '" + selectedStudentID + "'" +
                " and at.assignment_id = '" + selectedHWForStudent + "'" +
                " group by at.student_id, at.assignment_id ";        
        rs = db.conn.createStatement().executeQuery(query);
        while (rs.next()) {
            jLabel19.setText(rs.getString("totalAttempts"));
        }
        
        }
        catch (Exception oops) {
            System.out.println("Prof_Report.java:PopulateComboBoxData() " + oops);
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    //event triggered when student is selected on student related stats tab
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jComboBox3.removeAllItems();
        jLabel21.setText(" ");
        jLabel14.setText(" ");
        jLabel19.setText(" ");
    }//GEN-LAST:event_jComboBox2ActionPerformed

    //View button in Max score students stats tab clicked
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String selectedHW = Homeworks.get(jComboBox4.getSelectedIndex());
        int maxScore = 0;
        String studentName, attempt_dt;
        SimpleDateFormat sdf = new SimpleDateFormat("dd-M-yyyy hh12:mm:ss am");
        try
        {
            query = "select max(atmpt_score) as maximum from attempt "
                    + "where assignment_id = '" + selectedHW + "'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                maxScore = rs.getInt("maximum");
                jLabel24.setText(String.valueOf(maxScore));
            }
            
            
            //For finding the list of students who scored the maximum on first attempt
            query = "select a1.student_id, db.user_name, a1.assignment_id, a1.atmpt_dt, a1.atmpt_score " +
                    " from attempt a1, dbuser db where " +
                    " a1.student_id = db.user_id " +
                    " and a1.assignment_id = '" + selectedHW + "'" +
                    " and a1.atmpt_dt =  " +
                    " (select min(atmpt_dt) from attempt a2 " +
                    " where a1.student_id = a2.student_id " +
                    " and a1.assignment_id = a2.assignment_id " +
                    " group by student_id, assignment_id) " +
                    " and a1.atmpt_score = " + maxScore;
            
            rs = stmt.executeQuery(query);
            DefaultListModel studentList = new DefaultListModel();
            while (rs.next()) {
                studentName = rs.getString("user_name");           
                attempt_dt = rs.getTimestamp("atmpt_dt").toString();                
                studentList.addElement(studentName + " --> Attempt date:" + attempt_dt);
            }
            jList2.setModel(studentList);   
        }
        catch (Exception oops) {
            System.out.println("Prof_Report.java:PopulateComboBoxData() " + oops);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prof_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prof_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prof_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prof_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prof_Report().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
